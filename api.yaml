openapi: 3.0.1
info:
  title: Instant System
  description: "Documentation de l'API Instant-System utilisée par beaucoup de réseaux de transports en commun"
  contact: 
    email: "me@zdimension.fr"
  version: 1.0.5
  license:
    name: "MIT License"
servers:
- url: https://prod.instant-system.com/InstantCore
- url: https://dev.instant-system.com/InstantCore
tags:
- name: v3
  description: version 3, utilisée pour quasiment tout
- name: v1
  description: version 1, encore utilisée pour certains endpoints visiblement pas encore portés en v3
paths:
  /v3/networks/{networkId}:
    get:
      tags:
      - v3
      operationId: getNetworkById
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                required:
                - networks
                type: object
                properties:
                  networks:
                    maxItems: 1
                    minItems: 1
                    type: array
                    items:
                      $ref: '#/components/schemas/v3_Network'
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/lines:
    get:
      tags:
      - v3
      operationId: getLines
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                required:
                - lines
                type: object
                properties:
                  lines:
                    type: array
                    items:
                      $ref: '#/components/schemas/v3_Line'
                  disruptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/v3_Disruption'
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/lines/disruptions:
    get:
      tags:
      - v3
      operationId: getDisruptions
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      - name: subNetworks
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: integer
      - name: userlatlon
        in: query
        schema:
          type: string
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                required:
                - lines
                type: object
                properties:
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  lines:
                    type: array
                    items:
                      type: object
                      properties:
                        currentDisruptions:
                          type: array
                          items:
                            $ref: '#/components/schemas/v3_Disruption'
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/lines/{lineId}:
    get:
      tags:
      - v3
      operationId: getLineById
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      - $ref: '#/components/parameters/LineId'
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                required:
                - lines
                type: object
                properties:
                  lines:
                    maxItems: 1
                    minItems: 1
                    type: array
                    items:
                      $ref: '#/components/schemas/v3_Line'
                  disruptions:
                    type: array
                    items:
                      $ref: '#/components/schemas/v3_Disruption'
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/lines/{lineId}/stopAreas:
    get:
      tags:
      - v3
      operationId: getStopAreas
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      - $ref: '#/components/parameters/LineId'
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  stopAreas:
                    type: array
                    items:
                      type: object
                      allOf:
                      - $ref: '#/components/schemas/v3_StopArea'
                      - type: object
                        properties:
                          lines:
                            type: array
                            items:
                              $ref: '#/components/schemas/v3_Line'
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/lines/{lineId}/stopAreas/{stopAreaId}/schedules:
    get:
      tags:
      - v3
      operationId: getStopAreaSchedules
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      - $ref: '#/components/parameters/LineId'
      - name: stopAreaId
        in: path
        description: ID de l'arrêt
        required: true
        example: ISSTOPPLACE:196
        schema:
          type: string
      - name: displayName
        in: query
        description: Nom de la destination de la ligne (destinationDisplay). Doit être soit vide soit correct. Si incorrect, le tableau "directions" sera manquant.
        example: PARC DES GLAISINS
        schema:
          type: string
      - name: key
        in: query
        description: inconnu, peut-être un reste de la v1
        schema:
          type: integer
      - name: userlatlon
        in: query
        description: inconnu
        schema:
          type: string
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  stopAreas:
                    type: array
                    items:
                      type: object
                      properties:
                        stopArea:
                          type: object
                          allOf:
                          - $ref: '#/components/schemas/v3_StopArea'
                          - type: object
                            properties:
                              stopPoints:
                                type: array
                                items:
                                  $ref: '#/components/schemas/v3_StopPoint'
                        type:
                          $ref: '#/components/schemas/v3_StopAreaType'
                        types:
                          type: array
                          items:
                            $ref: '#/components/schemas/v3_StopAreaType'
                        lines:
                          type: array
                          items:
                            type: object
                            properties:
                              line:
                                $ref: '#/components/schemas/v3_Line'
                              type:
                                type: string
                                example: DIRECTION
                              directions:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    direction:
                                      type: object
                                      properties:
                                        direction:
                                          type: string
                                          example: OUTWARD
                                        display:
                                          type: string
                                          example: CAMPUS / PARC DES GLAISINS
                                    times:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          businessDate:
                                            type: string
                                          vehicleJourneyId:
                                            type: string
                                          vehicleJourneyName:
                                            type: string
                                          destinationId:
                                            type: string
                                          destinationDisplay:
                                            type: string
                                            example: PARC DES GLAISINS
                                          stopAreaId:
                                            type: string
                                          stopPointId:
                                            type: string
                                          stopPointName:
                                            type: string
                                          stopPointLat:
                                            type: number
                                          stopPointlon:
                                            type: number
                                          departureDateTime:
                                            $ref: '#/components/schemas/Timestamp'
                                          departureWait:
                                            type: integer
                                          precision:
                                            type: integer
                                          boarding:
                                            $ref: '#/components/schemas/YesNo'
                                          alighting:
                                            $ref: '#/components/schemas/YesNo'
                                          realTime:
                                            type: integer
                                          maj:
                                            type: string
                                          departureDet:
                                            type: string
                                        example:
                                          businessDate: "20200603"
                                          vehicleJourneyId: "34283"
                                          vehicleJourneyName: ""
                                          destinationId: 51|c599724ff2cbfec8bf6b8b20fca7104f
                                          destinationDisplay: PARC DES GLAISINS
                                          stopAreaId: ISSTOPPLACE:299
                                          stopPointId: 1QCH
                                          stopPointName: 4 CHEMINS
                                          stopPointLat: 45.90634
                                          stopPointlon: 6.11405
                                          departureDateTime: 2020-06-03T18:36:00+0200
                                          departureWait: 522
                                          precision: 60
                                          boarding: YES
                                          alighting: YES
                                          realTime: 0
                                          maj: 2020-06-03 12:03:28
                                          departureDet: INIT:2020-06-03 18:36:00  CORR:2020-06-03
                                            18:36:00  REAL:2020-06-03 18:36:00
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/launchNews:
    get:
      tags:
      - v3
      operationId: getLaunchNews
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      - name: key
        in: query
        schema:
          type: string
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  launchNews:
                    type: array
                    items:
                      type: string
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v3/networks/{networkId}/proximity:
    get:
      tags:
      - v3
      operationId: getProximities
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      - name: lat
        in: query
        description: Latitude
        schema:
          type: number
      - name: lon
        in: query
        description: Longitude
        schema:
          type: number
      - name: precision
        in: query
        schema:
          type: number
      - name: accessibility
        in: query
        schema:
          type: boolean
      - name: scholar
        in: query
        schema:
          type: integer
      - name: context
        in: query
        schema:
          type: string
      - name: key
        in: query
        schema:
          type: string
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  proximities:
                    type: array
                    items:
                      type: object
                      properties:
                        distance:
                          type: integer
                        stopArea:
                          $ref: '#/components/schemas/v3_StopArea'
                  shapes:
                    type: array
                    items:
                      type: string
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v1/GetNetwork:
    get:
      tags:
      - v1
      operationId: v1_getNetworkById
      parameters:
      - $ref: '#/components/parameters/NetworkIdKey'
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                required:
                - networks
                type: object
                properties:
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  networks:
                    maxItems: 1
                    minItems: 1
                    type: array
                    items:
                      $ref: '#/components/schemas/v1_Network'
        404:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v1/networks/{networkId}/banners:
    get:
      tags:
      - v1
      operationId: v1_getBanners
      parameters:
      - $ref: '#/components/parameters/NetworkId'
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  banners:
                    type: array
                    items:
                      $ref: '#/components/schemas/v1_Banner'
        503:
          description: ID invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
  /v1/CheckPlaces:
    post:
      tags:
      - v1
      operationId: v1_checkPlaces
      parameters:
      - $ref: '#/components/parameters/NetworkIdKey'
      - name: userlatlon
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  extid:
                    type: string
                    example: W:62490128:45.91969,6.15818
                    nullable: true
                  haschanged:
                    type: integer
                  isFlight:
                    type: boolean
                  newcity:
                    type: string
                    nullable: true
                  newid:
                    type: string
                    nullable: true
                  newlat:
                    type: number
                  newlon:
                    type: number
                  newname:
                    type: string
                    nullable: true
                  newtype:
                    type: string
                    nullable: true
                  stype:
                    type: string
                    nullable: true
                  type:
                    type: string
                    enum:
                    - STOPAREA
                    - EXTERNALLOCATION
                  address:
                    type: string
                    nullable: true
                  city:
                    type: string
                  dist:
                    type: integer
                  id:
                    type: string
                  lat:
                    type: number
                  lon:
                    type: number
                  name:
                    type: string
                  postCode:
                    type: string
                    nullable: true
                  ttsName:
                    type: string
                    nullable: true
        required: true
      responses:
        200:
          description: succès
          content:
            application/json:
              schema:
                required:
                - networks
                type: object
                properties:
                  timestamp:
                    $ref: '#/components/schemas/Timestamp'
                  networks:
                    maxItems: 1
                    minItems: 1
                    type: array
                    items:
                      $ref: '#/components/schemas/v1_Network'
        500:
          description: Requête invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
components:
  parameters:
    NetworkId:
      name: networkId
      in: path
      description: ID du réseau (voir [liste](#model-NetworkId))
      required: true
      schema:
        type: integer
    NetworkIdKey:
      name: key
      in: query
      description: ID du réseau (voir [liste](#model-NetworkId))
      required: true
      schema:
        type: integer
    LineId:
      name: lineId
      in: path
      description: ID de la ligne
      required: true
      schema:
        type: string
  schemas:
    NetworkId:
      type: integer
      # for i in {1..200}; do res=$(2>/dev/null curl -X GET "https://prod.instant-system.com/InstantCore/v1/GetNetwork?key=$i" -H "accept: application/json" | jq '(.networks[0].name + " " + .networks[0].contacts[0].value)' 2>/dev/null); if [ $? -eq 0 ]; then echo "$i $res"; fi; done
      description: > 
        Liste des réseaux au 13/04/2025 :
          * 1  : [Aix en Bus](https://www.aixenbus.fr/) (Aix-en-Provence)
          * 3  : [Synchro Bus](https://www.synchro-bus.fr/) (Chambéry)
          * 4  : [Rubis](https://www.rubis.grandbourg.fr/) (Bourg-en-Bresse)
          * 5  : [Bibus](https://www.bibus.fr/) (Brest)
          * 7  : [Ondéa](https://www.ondea-bus.fr/) (Aix-les-Bains)
          * 10 : [impulsyon](https://www.impulsyon.fr/) (La Roche-sur-Yon)
          * 12 : [SIBRA](https://www.sibra.fr/) (Annecy)
          * 14 : [Transvilles](https://www.transvilles.com/) (Valenciennes)
          * 20 : [Ginko Voit'](https://www.ginko.voyage/) (Besançon)
          * 22 : [ZOU](https://zou.maregionsud.fr/) (Région Sud)
          * 23 : [Palm Bus](https://www.palmbus.fr/) (Cannes)
          * 24 : [ilévia](https://www.ilevia.fr/) (Lille)
          * 25 : [Setram](https://www.setram.fr/) (Le Mans)
          * 26 : [Kiceo](https://www.kiceo.fr/) (Golfe du Morbihan)
          * 27 : [Zoom](https://www.buszoom.com/) (Chalon-sur-Saône)
          * 30 : [Divia](https://www.divia.fr/) (Dijon)
          * 35 : [Sillages - Cap Azur](https://sillages.paysdegrasse.fr/) (Pays de Grasse)
          * 39 : [CTRL](https://www.ctrl.fr/) (Lorient)
          * 45 : [Fluo](https://www.fluo.eu/) (Grand Est)
          * 46 : [Citéa](https://www.vrd-mobilites.fr/) (Valence)
          * 47 : [Envibus](https://www.envibus.fr/) (Sophia Antipolis)
          * 50 : [TCL](https://www.tcl.fr/) (Lyon)
          * 51 : [NTecC](https://www.ntecc.fr/) (Ales)
          * 53 : [Jybus](https://www.jybus.fr/) (Rumilly)
          * 55 : [LE MET'](https://lemet.fr/) (Metz)
          * 58 : [CP ZOU](https://zou.maregionsud.fr/) (Région Sud)
          * 59 : [TPL Mobilités](https://www.tlp.aeroport.fr/navettes-bus) (Tarbes-Lourdes-Pyrénées)
          * 61 : [Mamp](https://www.lepilote.com/) (Métropole Aix-Marseille-Provence)
          * 62 : [QUB](https://www.qub.fr/) (Quimper)
          * 63 : [Twisto](https://www.twisto.fr/) (Caen la Mer)
          * 66 : [TUL](https://www.tul-laval.com/fr/) (Laval)
          * 67 : [JVMalin](http://www.jvmalin.fr/fr/) (Centre-Val de Loire)
          * 68 : [Lignes d'Azur](https://www.lignesdazur.com/) (Nice Côte d'Azur)
          * 69 : [Ruban](https://www.rubantransport.com/) (Porte de l'Isère)
          * 70 : [SMTC](https://www.smtc-clermont-agglo.fr) (Clermont-Ferrand)
          * 71 : [Atoumod](https://atoumod.fr) (Haute-Normandie)
          * 73 : [Mobility Cairo](https://www.mobilitycairo.com) (Le Caire)
          * 74 : [Cap Cotentin](https://www.capcotentin.fr/) (Cotentin)
          * 76 : [Ales'y](https://www.ntecc.fr/) (Ales)
          * 77 : [Tac Mobilités](https://www.tac-mobilites.fr/) (Annemasse)
          * 78 : [Irigo](https://www.irigo.fr) (Angers)
          * 79 : [Martinique Mobilités](https://www.martiniquemobilites.mq) (Martinique)
          * 80 : [Ametis](https://www.ametis.fr/) (Amiens)
          * 81 : [Marineo](https://www.marineo.fr/) (Boulogne-sur-Mer)
          * 83 : [Epernay](https://www.mouveobus.fr/) (Epernay)
          * 84 : [Horizon](https://bus-horizon.com) (Châteauroux)
          * 85 : [Amelys](https://www.amelys.fr/) (Montargis)
          * 86 : [SETRAM](https://www.setram.fr/) (Le Mans)
          * 87 : maasPro
          * 88 : [SudLib](https://sudlib.fr/) (Martinique)
          * 89 : [SMTC](https://www.smtc-clermont-agglo.fr) (Clermont-Ferrand)
          * 90 : [Occitanie-LiO](https://lio.laregion.fr/) (Occitanie)
          * 91 : Occitanie
          * 92 : HautsDeFrance
          * 93 : [TXIK TXAK](https://www.txiktxak.fr/) (Pays Basque)
          * 94 : [STAR'T](https://www.star-t.fr/) (Thonon-les-Bains)
          * 95 : [L'va](https://www.lva-mobilite.fr/) (Vienne)
          * 97 : [Autolinee Toscane](https://www.at-bus.it/) (Toscane)
          * 98 : [TCAT](https://www.tcat.fr/) (Troyes)
          * 104 : [TUB](https://www.tub.bzh/) (Saint-Brieuc)
          * 105 : [Casatramway](https://www.casatramway.ma/) (Casablanca)
          * 110 : [PAVIA](https://www.comune.pv.it/) (Pavie)
          * 111 : [Eveole](https://www.eveole.com/) (Douai)
          * 112 : [Mistral](https://www.reseaumistral.com/) (Toulon)
          * 114 : [Choletbus](https://www.choletbus.fr/) (Cholet)
          * 117 : [AggloBus](https://www.agglobus.com/) (Bourges)
          * 119 : [Artis](https://www.bus-artis.fr/) (Arras)
          * 120 : [Oùra](https://www.oura.fr/) (Région Auvergne-Rhône-Alpes)
          * 121 : [Tul-Laon](https://www.tul-laon.fr/) (Laon)
          * 123 : [Île de la Réunion Mobilités](https://iledelareunion-mobilites.re/) (La Réunion)
          * 124 : [moova](https://www.moova-mobilites.fr/) (Vesoul)
          * 125 : VIAJAR no Barreiro
          * 126 : SIALL
          * 128 : Zilina Mobility
          * 129 : LezGOBO
          * 130 : Fluo
          * 133 : [Grand Dole Mobilités](https://www.grandole-mobilites.fr/) (Dole)
          * 135 : [AuxR_M](https://www.auxrmlebus.com/) (Auxerre)
          * 137 : Proxim iTi
          * 138 : [Envia](https://www.tout-envia.com/) (Arles)
          * 139 : CESENAMOB
          * 142 : Démo région
          * 144 : [Tere Tahiti](https://teretahiti.pf/) (Tahiti)
          * 146 : Bustac
          * 147 : Alpbus
          * 148 : Buss
          * 149 : [Libeo](https://www.libeo-brive.fr/) (Brive)
          * 150 : RLV Mobilités
          * 151 : [Mio](https://www.reseau-mio.fr/) (Millau)
          * 153 : MTM
          * 154 : Txik Txak
          * 157 : [Citibus](https://www.citibus.fr/) (Narbonne)
          * 161 : [RivConnect](https://www.riv-connect.nuamouv.com/) (Rives de Moselle)
          * 163 : TxikTxak
    APIError:
      required:
      - error
      - message
      - status
      type: object
      properties:
        status:
          type: integer
          description: Code HTTP
          example: 503
        error:
          type: string
          enum:
          - NETWORK_NOT_LOADED
        message:
          type: string
          example: Service unavailable. Please try again in a moment.
    YesNo:
      type: string
      enum:
      - NO
      - YES
    Timestamp:
      type: string
      format: date-time
    Mode:
      type: string
      enum:
      - TRAIN
      - RAPIDTRANSIT
      - METRO
      - RAILSHUTTLE
      - FUNICULAR
      - TRAM
      - BUS
      - COACH
      - SHUTTLE
      - BIKESHARING
      - VTC
      - CAR
      - RIDESHARING
      - CARRENTAL
      - PRIVATETAXI
      - BIKE
      - WALK
      - BIKEPARK
      - PARK
      - PARKANDRIDE
      - FERRY
      - LOCALTRAIN
      - TOD
      - AERIALLIFT
      - FLIGHT
    v3_Network:
      required:
      - id
      - lat
      - lon
      - name
      - networkLoaded
      - tripplannerLoaded
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        networkLoaded:
          type: boolean
        tripplannerLoaded:
          type: boolean
        lat:
          type: number
        lon:
          type: number
        modes:
          type: array
          example:
          - BUS
          items:
            $ref: '#/components/schemas/Mode'
    v3_StopPointBase:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        lat:
          type: number
          example: 45.90641
        lon:
          type: number
          example: 6.11388
    v3_StopPoint:
      allOf:
      - $ref: '#/components/schemas/v3_StopPointBase'
      - type: object
        properties:
          zone:
            type: integer
    v3_StopAreaType:
      type: string
      enum:
      - LINE
    v3_StopArea:
      allOf:
      - $ref: '#/components/schemas/v3_StopPointBase'
      - type: object
        properties:
          city:
            type: string
            example: Annecy
          postalCode:
            type: string
            example: "74600"
          actions:
            type: array
            items:
              type: object
              properties:
                elementType:
                  type: string
                  enum:
                  - PRIMARY_ACTION
                  - SECONDARY_ACTION
                actionType:
                  type: string
                  enum:
                  - GoToLocationAction
                  - GoFromLocationAction
                  - OpenTimeTablesAction
                enabled:
                  type: boolean
                labelKey:
                  type: string
    v3_Line:
      required:
      - color
      - id
      - lName
      - mode
      - operatorId
      - sName
      - subNetwork
      - textColor
      type: object
      properties:
        operatorId:
          type: string
          example: SIBRA
        id:
          type: string
          example: "51"
        sName:
          type: string
          description: Nom court
          example: "1"
        lName:
          type: string
          description: Nom long
          example: Ligne 1
        mode:
          $ref: '#/components/schemas/Mode'
        subNetwork:
          type: object
          properties:
            id:
              type: string
              example: ""
            name:
              type: string
              example: ""
        color:
          type: string
          format: color
          example: 00A13A
        textColor:
          type: string
          format: color
          example: FFFFFF
        mobilityFacilities:
          type: object
          properties:
            wheelchairs:
              type: string
              enum:
              - AVAILABLE
        scheduleSearchMode:
          $ref: '#/components/schemas/v3_ScheduleSearchMode'
        scheduleSearchModes:
          type: array
          items:
            $ref: '#/components/schemas/v3_ScheduleSearchMode'
        favoriteModes:
          type: array
          items:
            $ref: '#/components/schemas/v3_FavoriteMode'
        hasCurrentDisruptions:
          type: boolean
        disruptions:
          type: object
          properties:
            level:
              $ref: '#/components/schemas/v3_DisruptionLevel'
            currents:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: AIX:Disruption:28436
        codes:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: TINEA:ref
              value:
                type: string
                format: int64
                example: "1056401"
    v3_ScheduleSearchMode:
      type: string
      enum:
      - DIRECTIONS_STOPPOINTS
    v3_FavoriteMode:
      type: string
      enum:
      - LINE_STOPPOINT_DIRECTION
      - LINE_STOPAREA
      - STATION
    v3_Disruption:
      required:
      - endValidity
      - id
      - issueDate
      - operatorId
      - startValidity
      - title
      type: object
      properties:
        operatorId:
          type: string
          example: AIX
        id:
          type: string
          example: AIX:Disruption:28436
        title:
          type: string
          example: INFO TRAFIC des lignes à partir du 02/06
        messages:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
                format: html
        level:
          $ref: '#/components/schemas/v3_DisruptionLevel'
        lines:
          type: array
          items:
            $ref: '#/components/schemas/v3_Line'
        issueDate:
          $ref: '#/components/schemas/Timestamp'
        startValidity:
          $ref: '#/components/schemas/Timestamp'
        endValidity:
          $ref: '#/components/schemas/Timestamp'
        updateDate:
          $ref: '#/components/schemas/Timestamp'
    v3_DisruptionLevel:
      type: string
      enum:
      - WARN
      - INFO
    v1_Network:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        networkloaded:
          type: integer
        networkloaddate:
          type: string
        networkloadtimestamp:
          type: integer
        tripplannerloaded:
          type: integer
        tripplannerloaddate:
          type: string
        lat:
          type: number
        lon:
          type: number
        gmapzoom:
          type: integer
        gmapzoompoi:
          type: integer
        bounds:
          required:
          - northwestlat
          - northwestlon
          - southeastlat
          - southeastlon
          type: object
          properties:
            northwestlat:
              type: number
            northwestlon:
              type: number
            southeastlat:
              type: number
            southeastlon:
              type: number
        colour1:
          type: string
          format: color
        colour2:
          type: string
          format: color
        colour3:
          type: string
          format: color
        logo:
          type: string
          format: uri
        contact:
          type: string
          format: email
        demo:
          type: integer
        followfacebook:
          type: string
          format: uri
        followtwitter:
          type: string
          format: uri
        timezone:
          type: string
        modes:
          type: array
          items:
            $ref: '#/components/schemas/Mode'
        operators:
          type: array
          items:
            $ref: '#/components/schemas/v1_Operator'
        maps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              url:
                type: string
                format: uri
        options:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              datatype:
                type: integer
              valueint1:
                type: integer
              valuechar1:
                type: string
        layouts:
          type: object
          properties:
            schedule:
              type: array
              items:
                type: string
                enum:
                - FAV
                - LINES
                - STOPS
                - TRAIN
            homePanel:
              type: array
              items:
                type: string
                enum:
                - ONGOING_TRIPS
                - ETICKET_IN_USE
                - GUIDANCE
                - BANNERS
                - FAVOURITE_SCHEDULES
                - SAVED_ROADMAPS
                - FAVOURITE_PLACES
            itinerary_options:
              type: array
              items:
                type: string
                enum:
                - VIA
                - MODE
                - CRITERION
                - AVOIDTOLLS
            moving:
              type: array
              items:
                type: string
                enum:
                - PARK
                - PARKANDRIDE
                - CARSHARING
            disruption:
              type: array
              items:
                type: string
                enum:
                - DISRUPTIONS_LINES
                - DISRUPTIONS
            proximities:
              type: array
              items:
                required:
                - category
                - types
                type: object
                properties:
                  category:
                    type: string
                    enum:
                    - PUBLICTRANSPORT
                    - BIKE
                    - CARSHARING
                    - PARK
                  types:
                    type: array
                    items:
                      $ref: '#/components/schemas/v1_ProxType'
                  modes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Mode'
            webDynamicMap:
              type: array
              items:
                $ref: '#/components/schemas/v1_ProxType'
            itineraryResultLayout:
              type: array
              items:
                $ref: '#/components/schemas/v1_LayoutType'
            homeMapLayouts:
              type: array
              items:
                type: string
            displayTab:
              type: boolean
        itineraryResultLayout:
          type: object
          properties:
            standard:
              type: array
              items:
                $ref: '#/components/schemas/v1_LayoutType'
      example:
        id: 12
        name: Annecy
        networkloaded: 1
        networkloaddate: 2020-06-03 12:08:13
        networkloadtimestamp: 1591178893273
        tripplannerloaded: 1
        tripplannerloaddate: 2020-06-03 12:08:32
        lat: 45.899271
        lon: 6.128694
        gmapzoom: 12
        gmapzoompoi: 14
        bounds:
          northwestlat: 46.237075
          northwestlon: 5.393988
          southeastlat: 45.421992
          southeastlon: 6.921687
        colour1: 7ABF44
        colour2: 2D99D6
        colour3: ""
        logo: http://www.sibra.fr/sites/sibra.fr/files/sibra-bus.gif
        contact: sibra@sibra.fr
        demo: 0
        followfacebook: https://www.facebook.com/Sibra-Officiel-181371178589263
        followtwitter: http://twitter.com/#!/bus_sibra
        timezone: Europe/Paris
        modes:
        - TRAIN
        - RAPIDTRANSIT
        - METRO
        - RAILSHUTTLE
        - FUNICULAR
        - TRAM
        - BUS
        - COACH
        - SHUTTLE
        - BIKESHARING
        - VTC
        - CAR
        - RIDESHARING
        - CARRENTAL
        - PRIVATETAXI
        - BIKE
        - WALK
        - BIKEPARK
        - PARK
        - PARKANDRIDE
        operators:
        - id: OCESN
          name: SNCF
          url: ""
          phone: ""
          urlfare: ""
          whiteLogo: http://www.sncf.com/sites/all/themes/sncfninesixty/images/logo-sncf.png
          licence: ""
          displaylines: 0
          displayindex: 0
          primaryColor: ""
          logo: ""
        maps:
        - id: 1
          name: Plan (général)
          url: https://www.sibra.fr/sites/sibra.fr/files/wysiwyg/Horaires-et-plans/Lignes-et-plans/Sibra_urbain_plan_avril_2019_web.pdf?v=ad5f26a7.pdf
        - id: 2
          name: Plan simplifié
          url: https://www.sibra.fr/sites/sibra.fr/files/wysiwyg/Horaires-et-plans/Lignes-et-plans/Sibra_sche%C2%81matique_29X40_2019_WEB.pdf?v=cce03139.pdf
        options:
        - id: DISABLE_OPTIONSCHOLAR
          datatype: 1
          valueint1: 1
          valuechar1: ""
        - id: TPJOURNEY_NBDAYFUTUR
          datatype: 1
          valueint1: 31
          valuechar1: ""
    v1_LayoutType:
      type: string
      enum:
      - TRANSPORT
      - BIKE
      - CAR
      - WALK
    v1_ProxType:
      type: string
      enum:
      - StopArea
      - ClusteredLineStopPoint
      - PointOfSale
      - TodZone
      - BikePark
      - BikeSharingStation
      - SecureBikePark
      - BikeRentalAgency
      - CarSharingStation
      - Park
      - ParkAndRide
      - RideSharingPark
      - ChargingStation
      - Line
    v1_Operator:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
          format: uri
        phone:
          type: string
        urlfare:
          type: string
          format: uri
        whiteLogo:
          type: string
          format: uri
        licence:
          type: string
        displaylines:
          type: integer
        displayindex:
          type: integer
        primaryColor:
          type: string
          format: color
        logo:
          type: string
          format: uri
    v1_Banner:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          example: 'Ligne 2 : NOUVEAU terminus à compter du 2/06'
        color:
          type: string
          format: color
        picto:
          type: string
          enum:
          - circle_info
          - circle_warning
        description:
          type: string
        linkType:
          type: integer
        link:
          type: string
          format: uri
        buttonText:
          type: string
        position:
          type: integer
